#!/usr/bin/env perl

use strict;
use warnings;
use File::Basename qw(basename);
use Config::Tiny;
use Getopt::Long;
use Net::Twitter::Lite;

my $DEBUG = -f '.debug';

GetOptions('debug'   => \$DEBUG,
	   'perline' => \my $perline,
    );

my $status = join(' ', @ARGV);
unless ($status) {
    $status = join('', <STDIN>);
    chomp $status;
}

my $prog = basename($0);
my $conf = "$ENV{HOME}/.$prog";
my $ini  = Config::Tiny->read($conf);
die Config::Tiny->errstr unless $ini;

my %consumer_tokens = +(
    consumer_key    => $ini->{_}->{'Consumer key'},
    consumer_secret => $ini->{_}->{'Consumer secret'},
    legacy_lists_api => 0,
    apiurl           => 'http://api.twitter.com/1.1', # ad hoc v1.1 support
    );
my $access_token        = $ini->{_}->{'Access Token'};
my $access_token_secret = $ini->{_}->{'Access Token Secret'};

my $tw;
if (! $DEBUG) {
    $tw = Net::Twitter::Lite->new(%consumer_tokens);
    $tw->access_token($access_token);
    $tw->access_token_secret($access_token_secret);
}

sub update {
    my $status = shift;

    if ($DEBUG) {
	print "DEBUG $status\n";
    } else {
	utf8::decode($status);
	my $res = eval { $tw->update({status => $status}) };
	die "$@ $res\n" if $@;
    }
}

if ($status) {
    if ($perline) {
	foreach my $line (split("\n", $status)) {
	    update($line);
	}
    } else {
	update($status);
    }
}
